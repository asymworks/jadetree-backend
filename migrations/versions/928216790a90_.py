"""empty message

Revision ID: 928216790a90
Revises: 
Create Date: 2020-11-23 07:56:52.812934

"""
from alembic import op
import sqlalchemy as sa

import jadetree.database.types as jt

# revision identifiers, used by Alembic.
revision = '928216790a90'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('jadetree_config',
    sa.Column('key', sa.String(), nullable=False),
    sa.Column('value', sa.String(length=128), nullable=True),
    sa.PrimaryKeyConstraint('key')
    )
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('email', sa.String(length=128), nullable=False),
    sa.Column('pw_hash', sa.String(length=128), nullable=True),
    sa.Column('uid_hash', sa.String(length=32), nullable=False),
    sa.Column('admin', sa.Boolean(), nullable=False),
    sa.Column('active', sa.Boolean(), nullable=False),
    sa.Column('confirmed', sa.Boolean(), nullable=False),
    sa.Column('confirmed_at', jt.ArrowType(), nullable=True),
    sa.Column('profile_setup', sa.Boolean(), nullable=False),
    sa.Column('profile_setup_at', jt.ArrowType(), nullable=True),
    sa.Column('name', sa.String(length=128), nullable=True),
    sa.Column('language', sa.String(length=2), nullable=False),
    sa.Column('locale', sa.String(length=20), nullable=True),
    sa.Column('currency', sa.String(length=8), nullable=True),
    sa.Column('fmt_date_short', sa.String(length=32), nullable=True),
    sa.Column('fmt_date_long', sa.String(length=32), nullable=True),
    sa.Column('fmt_decimal', sa.String(length=64), nullable=True),
    sa.Column('fmt_currency', sa.String(length=64), nullable=True),
    sa.Column('fmt_accounting', sa.String(length=64), nullable=True),
    sa.Column('created_at', jt.ArrowType(), nullable=True),
    sa.Column('modified_at', jt.ArrowType(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_index(op.f('ix_users_uid_hash'), 'users', ['uid_hash'], unique=True)
    op.create_table('budgets',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=128), nullable=False),
    sa.Column('currency', sa.String(length=8), nullable=False),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('created_at', jt.ArrowType(), nullable=True),
    sa.Column('modified_at', jt.ArrowType(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('accounts',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('budget_id', sa.Integer(), nullable=True),
    sa.Column('name', sa.String(length=128), nullable=False),
    sa.Column('role', sa.Enum('system', 'personal', 'budget', 'trading', name='accountrole'), nullable=False),
    sa.Column('type', sa.Enum('A', 'L', 'I', 'E', 'C', 'T', name='accounttype'), nullable=False),
    sa.Column('subtype', sa.Enum('checking', 'savings', 'cash', 'paypal', 'merchant', 'credit_card', 'loc', 'investment', 'mortgage', 'other', name='accountsubtype'), nullable=True),
    sa.Column('currency', sa.String(length=8), nullable=False),
    sa.Column('active', sa.Boolean(), nullable=True),
    sa.Column('iban', sa.String(length=34), nullable=True),
    sa.Column('opened', sa.Date(), nullable=True),
    sa.Column('closed', sa.Date(), nullable=True),
    sa.Column('display_order', sa.Integer(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('created_at', jt.ArrowType(), nullable=True),
    sa.Column('modified_at', jt.ArrowType(), nullable=True),
    sa.ForeignKeyConstraint(['budget_id'], ['budgets.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('categories',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('budget_id', sa.Integer(), nullable=False),
    sa.Column('parent_id', sa.Integer(), nullable=True),
    sa.Column('name', sa.String(length=128), nullable=False),
    sa.Column('system', sa.Boolean(), nullable=True),
    sa.Column('hidden', sa.Boolean(), nullable=True),
    sa.Column('display_order', sa.Integer(), nullable=True),
    sa.Column('default_budget', jt.AmountType(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['budget_id'], ['budgets.id'], ),
    sa.ForeignKeyConstraint(['parent_id'], ['categories.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('budget_entries',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('budget_id', sa.Integer(), nullable=False),
    sa.Column('category_id', sa.Integer(), nullable=True),
    sa.Column('month', sa.Date(), nullable=True),
    sa.Column('amount', jt.AmountType(), nullable=True),
    sa.Column('rollover', sa.Boolean(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['budget_id'], ['budgets.id'], ),
    sa.ForeignKeyConstraint(['category_id'], ['categories.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('payees',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('category_id', sa.Integer(), nullable=True),
    sa.Column('account_id', sa.Integer(), nullable=True),
    sa.Column('name', sa.String(length=128), nullable=False),
    sa.Column('role', sa.Enum('initial', 'transfer', 'expense', name='payeerole'), nullable=False),
    sa.Column('system', sa.Boolean(), nullable=True),
    sa.Column('hidden', sa.Boolean(), nullable=True),
    sa.Column('memo', sa.String(length=255), nullable=True),
    sa.Column('amount', jt.AmountType(), nullable=True),
    sa.Column('created_at', jt.ArrowType(), nullable=True),
    sa.Column('modified_at', jt.ArrowType(), nullable=True),
    sa.ForeignKeyConstraint(['account_id'], ['accounts.id'], ),
    sa.ForeignKeyConstraint(['category_id'], ['categories.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_payees_name'), 'payees', ['name'], unique=False)
    op.create_table('transactions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('account_id', sa.Integer(), nullable=False),
    sa.Column('payee_id', sa.Integer(), nullable=False),
    sa.Column('date', sa.Date(), nullable=False),
    sa.Column('check', sa.String(length=64), nullable=True),
    sa.Column('memo', sa.String(length=255), nullable=True),
    sa.Column('currency', sa.String(length=8), nullable=False),
    sa.Column('foreign_currency', sa.String(length=8), nullable=True),
    sa.Column('foreign_exchrate', jt.AmountType(), nullable=True),
    sa.ForeignKeyConstraint(['account_id'], ['accounts.id'], ),
    sa.ForeignKeyConstraint(['payee_id'], ['payees.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('transaction_lines',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('transaction_id', sa.Integer(), nullable=False),
    sa.Column('account_id', sa.Integer(), nullable=False),
    sa.Column('cleared', sa.Boolean(), nullable=True),
    sa.Column('cleared_at', sa.Date(), nullable=True),
    sa.Column('reconciled', sa.Boolean(), nullable=True),
    sa.Column('reconciled_at', sa.Date(), nullable=True),
    sa.ForeignKeyConstraint(['account_id'], ['accounts.id'], ),
    sa.ForeignKeyConstraint(['transaction_id'], ['transactions.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('transaction_splits',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('transaction_id', sa.Integer(), nullable=False),
    sa.Column('category_id', sa.Integer(), nullable=True),
    sa.Column('left_line_id', sa.Integer(), nullable=False),
    sa.Column('right_line_id', sa.Integer(), nullable=False),
    sa.Column('type', sa.Enum('inflow', 'outflow', 'transfer', 'system', name='transactiontype'), nullable=False),
    sa.Column('memo', sa.String(length=255), nullable=True),
    sa.ForeignKeyConstraint(['category_id'], ['categories.id'], ),
    sa.ForeignKeyConstraint(['left_line_id'], ['transaction_lines.id'], ),
    sa.ForeignKeyConstraint(['right_line_id'], ['transaction_lines.id'], ),
    sa.ForeignKeyConstraint(['transaction_id'], ['transactions.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('transaction_entries',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('line_id', sa.Integer(), nullable=False),
    sa.Column('split_id', sa.Integer(), nullable=False),
    sa.Column('amount', jt.AmountType(), nullable=False),
    sa.Column('currency', sa.String(length=8), nullable=False),
    sa.ForeignKeyConstraint(['line_id'], ['transaction_lines.id'], ),
    sa.ForeignKeyConstraint(['split_id'], ['transaction_splits.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('transaction_entries')
    op.drop_table('transaction_splits')
    op.drop_table('transaction_lines')
    op.drop_table('transactions')
    op.drop_index(op.f('ix_payees_name'), table_name='payees')
    op.drop_table('payees')
    op.drop_table('budget_entries')
    op.drop_table('categories')
    op.drop_table('accounts')
    op.drop_table('budgets')
    op.drop_index(op.f('ix_users_uid_hash'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    op.drop_table('jadetree_config')
    # ### end Alembic commands ###
